// Code generated by mockery v2.42.0. DO NOT EDIT.

package gosesh

import (
	gosesh "github.com/rlebel12/gosesh"
	mock "github.com/stretchr/testify/mock"
)

// ConfigOpts is an autogenerated mock type for the ConfigOpts type
type ConfigOpts struct {
	mock.Mock
}

type ConfigOpts_Expecter struct {
	mock *mock.Mock
}

func (_m *ConfigOpts) EXPECT() *ConfigOpts_Expecter {
	return &ConfigOpts_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: _a0
func (_m *ConfigOpts) Execute(_a0 *gosesh.Config) {
	_m.Called(_a0)
}

// ConfigOpts_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type ConfigOpts_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - _a0 *gosesh.Config
func (_e *ConfigOpts_Expecter) Execute(_a0 interface{}) *ConfigOpts_Execute_Call {
	return &ConfigOpts_Execute_Call{Call: _e.mock.On("Execute", _a0)}
}

func (_c *ConfigOpts_Execute_Call) Run(run func(_a0 *gosesh.Config)) *ConfigOpts_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gosesh.Config))
	})
	return _c
}

func (_c *ConfigOpts_Execute_Call) Return() *ConfigOpts_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *ConfigOpts_Execute_Call) RunAndReturn(run func(*gosesh.Config)) *ConfigOpts_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewConfigOpts creates a new instance of ConfigOpts. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewConfigOpts(t interface {
	mock.TestingT
	Cleanup(func())
}) *ConfigOpts {
	mock := &ConfigOpts{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
